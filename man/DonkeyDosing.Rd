% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interface.R
\docType{class}
\name{DonkeyDosing}
\alias{DonkeyDosing}
\alias{donkeydosing}
\title{Data import, model running, and data/dosing sheet export for the Donkey Dosing software}
\arguments{
\item{excel_file}{path to an excel from which to read data (either locations, FEC or weather data, depending on the method).  Should have a .xlsx or .xls file extension (length 1 character).}

\item{excel_sheet}{the relevant sheet number/name within the excel file}

\item{year}{the farm relevant to the FEC data to be read (length 1 character)}

\item{cl}{the number of cores on which to run parallel computation (or a cluster created by makeCluster or similar)}
}
\value{
An object of class DonkeyDosing.
}
\description{
This function is used to import one or more FEC and weather data files, process the data into the necessary format, and then run the training model to generated updated coefficients for the predictive model used by the dosing support tool.  Facilities to save the processed data and updated coefficients etc are also provided.
}
\details{
This class is written using an OOP-style of programming, so that the data can be accessed in different formats at any point using a single R object as the point of reference.  This minimises the possibilities for programming mistakes by the end user, but does result in code that may look a little strange to users who may be more used to the standard procedural style of R programming.  The best way to understand the code is using an example - see vignette('DonkeyDosing', package='DonkeyDosing') for an overview.
}
\section{Methods}{

\describe{
\item{\code{AddDosingSheet(year, farm, excel_file, excel_sheet = farm)}}{Add animal-level FEC and dosing information for a given farm and year from an existing dosing spreadsheet}

\item{\code{AddLocations(year, excel_file)}}{Add farm location information for a given year}

\item{\code{AddWeatherSheet(weather_file, years = "all", replace = TRUE, ...)}}{Add weather data for one or more years from either an Excel or CSV file}

\item{\code{FitPredictionModel(formula = NA, years = "last10", comparison = FALSE)}}{Fit the prediction model}

\item{\code{GetCoefficients(
  write = TRUE,
  coefs_file = "effect_etimates.csv",
  sexcodes_file = "sex_codes.csv",
  PMcoefs = system.file("extdata/PMcoefs.Rdata", package = "DonkeyDosing")
)}}{Extract coefficient estimates for entering into the dosing tool}

\item{\code{GetGroupModelData(years = "all", force_reprocess = FALSE)}}{Prepare and retrieve the currently loaded location/animal/FEC/weather data for modelling}

\item{\code{GetPlots(farm, year = "latest", file = "", ...)}}{Extract plots showing model fit/predictions for each farm and year requested}

\item{\code{GetPredictions(
  year,
  farm,
  excel_file,
  excel_sheet = farm,
  weeks = "all",
  dosing_thresholds = c(600, 1000, 2000),
  prob_threshold = 0.35,
  PMcoefs = system.file("extdata/PMcoefs.Rdata", package = "DonkeyDosing"),
  cl = getOption("mc.cores", 2L)
)}}{Extract predictions for checking model estimates}

\item{\code{LoadDataArchive(archive_file, years = "all")}}{Load location/animal/FEC/weather data from an archive file}

\item{\code{LoadPredictionModel(saved)}}{This function is only needed for testing purposes}

\item{\code{Reset()}}{Reset the DonkeyDosing object (clear all data)}

\item{\code{SaveDataArchive(
  archive_file,
  years = "all",
  overwrite = FALSE,
  compress = "gzip",
  compression_level = 6
)}}{Save the currently loaded location/animal/FEC/weather data into an archive file}

\item{\code{initialize(reset = FALSE)}}{Set up a DonkeyDosing object before importing files}
}}

\examples{
\dontrun{
vignette('DonkeyDosing', package='DonkeyDosing')
}
}
